server {
  # 监听 80 和 443 端口
  listen 80;
  listen 443 ssl;

  # 你的域名
  server_name admin.beike.ai;

  # SSL 证书路径
  ssl_certificate /etc/letsencrypt/live/admin.beike.ai/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/admin.beike.ai/privkey.pem;

  # 静态文件请求。所有 /static/ 路径的请求都会到 /home/ec2-user/beike-admin/dist/ 目录下查找文件
  location /static/ {
    alias /home/ec2-user/beike-admin/dist/;
  }

  # 上传文件请求。所有 /uploads 路径的请求都通过反向代理到 Node.js 应用程序的相同路径
  # 这意味着 /uploads 路径将被 Node.js 应用程序处理，而不是直接被 Nginx 处理
  location /uploads {
    proxy_pass http://localhost:3000;

    # 以下的配置是为了 WebSocket 的需要，如果你不使用 WebSocket，也可以保留
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  # 默认的请求处理。所有的非特定路径请求都通过反向代理到 Node.js 应用程序
  location / {
    proxy_pass http://localhost:3000;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  # 缓存一些文件类型的请求
  location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg)$ {
    expires 1y;
    add_header Cache-Control "public";
  }

  # 错误页面
  error_page  500 502 503 504  /50x.html;
}

# 请注意，location /uploads 块应该出现在 location / 块之前。
# 这是因为 Nginx 会根据配置文件中的顺序选择第一个匹配请求的 location 块。
# 所以，如果 location / 块出现在 location /uploads 块之前，所有的请求都会被 location / 块处理，location /uploads 块将被忽视。